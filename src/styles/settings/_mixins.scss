@import "./variables";
// брейкпоинты
@mixin for-phone-only {
    @media only screen and (min-width: 320px) and (max-width: 639.98px) {
        @content;
    }
}

@mixin for-tablet-only {
    @media only screen and (min-width: 640px) and (max-width: 1023.98px) {
        @content;
    }
}
@mixin for-laptop-only {
    @media only screen and (min-width: 1024px) and (max-width: 1279.98px) {
        @content;
    }
}

@mixin for-desktop-only {
    @media only screen and (min-width: 1280px) and (max-width: 1919.98px) {
        @content;
    }
}
@mixin for-tv-only {
    @media only screen and (min-width: 1920px) {
        @content;
    }
}

// перевод в rem на основе $base-font-size
@function stripUnit($value) {
    @return $value / ($value * 0 + 1);
}
@function rem($pxValue) {
    @return #{stripUnit($pxValue) / stripUnit($base-font-size)}rem;
}
//====

//миксин принимает пк размер и мобильный размер, а далее делает безшовный переход
// настроен на брейкпоинты выше  и $maxWidth.
@mixin adaptiv-font($pcSize, $mobSize) {
    $addSize: $pcSize - $mobSize;
    $addMobSize: $addSize + $addSize * 0.7;

    @media (max-width: 639.98px) {
        font-size: calc(
            #{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth})
        );
    }

    @media (min-width: 640px) {
        font-size: calc(
            #{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth})
        );
    }
}

// Reset Mixin
@mixin reset($font-family, $font-size, $color) {
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    @if $font-family {
        font-family: $font-family;
    }

    @if $font-size {
        font-size: $font-size;
    }

    @if $color {
        color: $color;
    }
}

@function em($pixels, $context: $browser-context) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1em;
}
