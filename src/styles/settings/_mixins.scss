@import './variables';
// брейкпоинты
@mixin for-phone-only {
    @media only screen and (min-width: 320px) and (max-width: 639.98px) {
        @content;
    }
}

@mixin for-tablet-only {
    @media only screen and (min-width: 640px) and (max-width: 1023.98px) {
        @content;
    }
}
@mixin for-laptop-only {
    @media only screen and (min-width: 1024px) and (max-width: 1279.98px) {
        @content;
    }
}

@mixin for-desktop-only {
    @media only screen and (min-width: 1280px) and (max-width: 1919.98px) {
        @content;
    }
}
@mixin for-tv-only {
    @media only screen and (min-width: 1920px) {
        @content;
    }
}

// перевод в rem на основе $base-font-size
@function stripUnit($value) {
    @return $value / ($value * 0 + 1);
}
@function rem($pxValue) {
    @return #{stripUnit($pxValue) / stripUnit($base-font-size)}rem;
}
//====

//миксин принимает пк размер и мобильный размер, а далее делает безшовный переход
// настроен на брейкпоинты выше  и $maxWidth.
@mixin adaptiv-font($pcSize, $mobSize) {
    $addSize: $pcSize - $mobSize;
    $addMobSize: $addSize + $addSize * 0.7;

    @media (max-width: 639.98px) {
        font-size: calc(
            #{$mobSize + px} + #{$addMobSize} * ((100vw - 320px) / #{$maxWidth})
        );
    }

    @media (min-width: 640px) {
        font-size: calc(#{$mobSize + px} + #{$addSize} * (100vw / #{$maxWidth}));
    }
}

// Reset Mixin
@mixin reset($font-family, $font-size, $color) {
    box-sizing: border-box;
    margin: 0;
    padding: 0;

    @if $font-family {
        font-family: $font-family;
    }

    @if $font-size {
        font-size: $font-size;
    }

    @if $color {
        color: $color;
    }
}

@function em($pixels, $context: $base-font-size) {
    @if (unitless($pixels)) {
        $pixels: $pixels * 1px;
    }

    @if (unitless($context)) {
        $context: $context * 1px;
    }

    @return $pixels / $context * 1em;
}

@mixin button-variant($color, $background, $border-color) {
    transition: all 0.2s ease;

    color: $color;
    border-color: $border-color;
    background-color: $background;

    &:hover,
    &:focus,
    &:active {
        color: $color;
        border-color: darken($border-color, 5%);
        background-color: darken($background, 3%);
    }

    &[disabled],
    fieldset[disabled] & {
        &,
        &:hover,
        &:focus,
        &:active {
            border-color: $border-color;
            background-color: $background;
        }
    }
}

@mixin box-center($justify: center, $align: center) {
    display: flex;

    @if ($align !=false) {
        align-items: $align;
    }
    @if ($justify !=false) {
        justify-content: $justify;
    }
}

// * Usage
// * @include debug(); // draws outlines around parent and children
// * @include debug(true); // draws outline around parent, puts semi-transparent background on parent and children

@mixin debug($useBackground: false) {
    outline: 1px solid rgba(200, 100, 50, 0.9);

    @if ($useBackground) {
        background: rgba(200, 100, 50, 0.1);

        * {
            background: rgba(200, 100, 50, 0.1);
        }
    } @else {
        * {
            outline: 1px solid rgba(200, 100, 50, 0.9);
        }
    }
}
